// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.24.3
// source: api/products/src/tea_type.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	ptypes "gopa/api/ptypes"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Code        int32  `protobuf:"zigzag32,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Intro       string `protobuf:"bytes,4,opt,name=Intro,proto3" json:"Intro,omitempty"`
	Feature     string `protobuf:"bytes,5,opt,name=Feature,proto3" json:"Feature,omitempty"`
	Process     string `protobuf:"bytes,6,opt,name=Process,proto3" json:"Process,omitempty"`
	CreatedTime int64  `protobuf:"zigzag64,7,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	UpdatedTime int64  `protobuf:"zigzag64,8,opt,name=UpdatedTime,proto3" json:"UpdatedTime,omitempty"`
}

func (x *TeaType) Reset() {
	*x = TeaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaType) ProtoMessage() {}

func (x *TeaType) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaType.ProtoReflect.Descriptor instead.
func (*TeaType) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{0}
}

func (x *TeaType) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TeaType) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TeaType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeaType) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *TeaType) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *TeaType) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *TeaType) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *TeaType) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type TeaTypeCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"zigzag32,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Intro   string `protobuf:"bytes,4,opt,name=Intro,proto3" json:"Intro,omitempty"`
	Feature string `protobuf:"bytes,5,opt,name=Feature,proto3" json:"Feature,omitempty"`
	Process string `protobuf:"bytes,6,opt,name=Process,proto3" json:"Process,omitempty"`
}

func (x *TeaTypeCreateRequest) Reset() {
	*x = TeaTypeCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeCreateRequest) ProtoMessage() {}

func (x *TeaTypeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeCreateRequest.ProtoReflect.Descriptor instead.
func (*TeaTypeCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{1}
}

func (x *TeaTypeCreateRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TeaTypeCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeaTypeCreateRequest) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *TeaTypeCreateRequest) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *TeaTypeCreateRequest) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

type TeaTypeDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *TeaTypeDeleteRequest) Reset() {
	*x = TeaTypeDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeDeleteRequest) ProtoMessage() {}

func (x *TeaTypeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeDeleteRequest.ProtoReflect.Descriptor instead.
func (*TeaTypeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{2}
}

func (x *TeaTypeDeleteRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type TeaTypeUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64  `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Code    int32  `protobuf:"zigzag32,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Intro   string `protobuf:"bytes,4,opt,name=Intro,proto3" json:"Intro,omitempty"`
	Feature string `protobuf:"bytes,5,opt,name=Feature,proto3" json:"Feature,omitempty"`
	Process string `protobuf:"bytes,6,opt,name=Process,proto3" json:"Process,omitempty"`
}

func (x *TeaTypeUpdateRequest) Reset() {
	*x = TeaTypeUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeUpdateRequest) ProtoMessage() {}

func (x *TeaTypeUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeUpdateRequest.ProtoReflect.Descriptor instead.
func (*TeaTypeUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{3}
}

func (x *TeaTypeUpdateRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TeaTypeUpdateRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TeaTypeUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeaTypeUpdateRequest) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *TeaTypeUpdateRequest) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *TeaTypeUpdateRequest) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

type TeaTypeGetConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   int64 `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Code int32 `protobuf:"zigzag32,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *TeaTypeGetConditions) Reset() {
	*x = TeaTypeGetConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeGetConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeGetConditions) ProtoMessage() {}

func (x *TeaTypeGetConditions) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeGetConditions.ProtoReflect.Descriptor instead.
func (*TeaTypeGetConditions) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{4}
}

func (x *TeaTypeGetConditions) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TeaTypeGetConditions) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TeaTypeGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions *TeaTypeGetConditions `protobuf:"bytes,1,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
	Columns    string                `protobuf:"bytes,2,opt,name=Columns,proto3" json:"Columns,omitempty"`
}

func (x *TeaTypeGetRequest) Reset() {
	*x = TeaTypeGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeGetRequest) ProtoMessage() {}

func (x *TeaTypeGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeGetRequest.ProtoReflect.Descriptor instead.
func (*TeaTypeGetRequest) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{5}
}

func (x *TeaTypeGetRequest) GetConditions() *TeaTypeGetConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *TeaTypeGetRequest) GetColumns() string {
	if x != nil {
		return x.Columns
	}
	return ""
}

type TeaTypeFindConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []int32 `protobuf:"zigzag32,2,rep,packed,name=Codes,proto3" json:"Codes,omitempty"`
}

func (x *TeaTypeFindConditions) Reset() {
	*x = TeaTypeFindConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeFindConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeFindConditions) ProtoMessage() {}

func (x *TeaTypeFindConditions) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeFindConditions.ProtoReflect.Descriptor instead.
func (*TeaTypeFindConditions) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{6}
}

func (x *TeaTypeFindConditions) GetCodes() []int32 {
	if x != nil {
		return x.Codes
	}
	return nil
}

type TeaTypeFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions *TeaTypeFindConditions `protobuf:"bytes,1,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
	Columns    string                 `protobuf:"bytes,2,opt,name=Columns,proto3" json:"Columns,omitempty"`
}

func (x *TeaTypeFindRequest) Reset() {
	*x = TeaTypeFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeFindRequest) ProtoMessage() {}

func (x *TeaTypeFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeFindRequest.ProtoReflect.Descriptor instead.
func (*TeaTypeFindRequest) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{7}
}

func (x *TeaTypeFindRequest) GetConditions() *TeaTypeFindConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *TeaTypeFindRequest) GetColumns() string {
	if x != nil {
		return x.Columns
	}
	return ""
}

type TeaTypeSearchConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"zigzag32,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *TeaTypeSearchConditions) Reset() {
	*x = TeaTypeSearchConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeSearchConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeSearchConditions) ProtoMessage() {}

func (x *TeaTypeSearchConditions) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeSearchConditions.ProtoReflect.Descriptor instead.
func (*TeaTypeSearchConditions) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{8}
}

func (x *TeaTypeSearchConditions) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TeaTypeSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions *TeaTypeSearchConditions `protobuf:"bytes,1,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
	Columns    string                   `protobuf:"bytes,2,opt,name=Columns,proto3" json:"Columns,omitempty"`
	Page       int32                    `protobuf:"zigzag32,3,opt,name=Page,proto3" json:"Page,omitempty"`
	Limit      int32                    `protobuf:"zigzag32,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	OrderBy    string                   `protobuf:"bytes,5,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
}

func (x *TeaTypeSearchRequest) Reset() {
	*x = TeaTypeSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeSearchRequest) ProtoMessage() {}

func (x *TeaTypeSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeSearchRequest.ProtoReflect.Descriptor instead.
func (*TeaTypeSearchRequest) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{9}
}

func (x *TeaTypeSearchRequest) GetConditions() *TeaTypeSearchConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *TeaTypeSearchRequest) GetColumns() string {
	if x != nil {
		return x.Columns
	}
	return ""
}

func (x *TeaTypeSearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TeaTypeSearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TeaTypeSearchRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type TeaTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeaType *TeaType `protobuf:"bytes,1,opt,name=TeaType,proto3" json:"TeaType,omitempty"`
}

func (x *TeaTypeResponse) Reset() {
	*x = TeaTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeResponse) ProtoMessage() {}

func (x *TeaTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeResponse.ProtoReflect.Descriptor instead.
func (*TeaTypeResponse) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{10}
}

func (x *TeaTypeResponse) GetTeaType() *TeaType {
	if x != nil {
		return x.TeaType
	}
	return nil
}

type TeaTypeSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32      `protobuf:"zigzag32,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Limit     int32      `protobuf:"zigzag32,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Count     int32      `protobuf:"zigzag32,3,opt,name=Count,proto3" json:"Count,omitempty"`
	TotalPage int32      `protobuf:"zigzag32,4,opt,name=TotalPage,proto3" json:"TotalPage,omitempty"`
	List      []*TeaType `protobuf:"bytes,5,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *TeaTypeSearchResponse) Reset() {
	*x = TeaTypeSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_products_src_tea_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaTypeSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaTypeSearchResponse) ProtoMessage() {}

func (x *TeaTypeSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_products_src_tea_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaTypeSearchResponse.ProtoReflect.Descriptor instead.
func (*TeaTypeSearchResponse) Descriptor() ([]byte, []int) {
	return file_api_products_src_tea_type_proto_rawDescGZIP(), []int{11}
}

func (x *TeaTypeSearchResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TeaTypeSearchResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TeaTypeSearchResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeaTypeSearchResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *TeaTypeSearchResponse) GetList() []*TeaType {
	if x != nil {
		return x.List
	}
	return nil
}

var File_api_products_src_tea_type_proto protoreflect.FileDescriptor

var file_api_products_src_tea_type_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x73,
	0x72, 0x63, 0x2f, 0x74, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf,
	0x01, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x54,
	0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3a,
	0x0a, 0x14, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x11, 0x54, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x15, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x11, 0x52, 0x05, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x79, 0x0a, 0x12, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67,
	0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x2d, 0x0a,
	0x17, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x01, 0x0a,
	0x14, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x70, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x22, 0x48, 0x0a, 0x0f, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x54,
	0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x32, 0xf0, 0x04, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x50, 0x43, 0x12, 0x7e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x67,
	0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2f, 0x74, 0x65, 0x61, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x67,
	0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2f, 0x74, 0x65, 0x61, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x70, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x32, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x74, 0x65, 0x61, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x75, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x25, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2f, 0x74, 0x65, 0x61, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x12,
	0x84, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x28, 0x2e, 0x67, 0x6f, 0x70,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x74, 0x65, 0x61, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x1a, 0x5a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_products_src_tea_type_proto_rawDescOnce sync.Once
	file_api_products_src_tea_type_proto_rawDescData = file_api_products_src_tea_type_proto_rawDesc
)

func file_api_products_src_tea_type_proto_rawDescGZIP() []byte {
	file_api_products_src_tea_type_proto_rawDescOnce.Do(func() {
		file_api_products_src_tea_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_products_src_tea_type_proto_rawDescData)
	})
	return file_api_products_src_tea_type_proto_rawDescData
}

var file_api_products_src_tea_type_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_products_src_tea_type_proto_goTypes = []interface{}{
	(*TeaType)(nil),                 // 0: gopa.api.tea.proto.TeaType
	(*TeaTypeCreateRequest)(nil),    // 1: gopa.api.tea.proto.TeaTypeCreateRequest
	(*TeaTypeDeleteRequest)(nil),    // 2: gopa.api.tea.proto.TeaTypeDeleteRequest
	(*TeaTypeUpdateRequest)(nil),    // 3: gopa.api.tea.proto.TeaTypeUpdateRequest
	(*TeaTypeGetConditions)(nil),    // 4: gopa.api.tea.proto.TeaTypeGetConditions
	(*TeaTypeGetRequest)(nil),       // 5: gopa.api.tea.proto.TeaTypeGetRequest
	(*TeaTypeFindConditions)(nil),   // 6: gopa.api.tea.proto.TeaTypeFindConditions
	(*TeaTypeFindRequest)(nil),      // 7: gopa.api.tea.proto.TeaTypeFindRequest
	(*TeaTypeSearchConditions)(nil), // 8: gopa.api.tea.proto.TeaTypeSearchConditions
	(*TeaTypeSearchRequest)(nil),    // 9: gopa.api.tea.proto.TeaTypeSearchRequest
	(*TeaTypeResponse)(nil),         // 10: gopa.api.tea.proto.TeaTypeResponse
	(*TeaTypeSearchResponse)(nil),   // 11: gopa.api.tea.proto.TeaTypeSearchResponse
	(*ptypes.Int64)(nil),            // 12: gopa.api.ptypes.Int64
	(*ptypes.Empty)(nil),            // 13: gopa.api.ptypes.Empty
}
var file_api_products_src_tea_type_proto_depIdxs = []int32{
	4,  // 0: gopa.api.tea.proto.TeaTypeGetRequest.Conditions:type_name -> gopa.api.tea.proto.TeaTypeGetConditions
	6,  // 1: gopa.api.tea.proto.TeaTypeFindRequest.Conditions:type_name -> gopa.api.tea.proto.TeaTypeFindConditions
	8,  // 2: gopa.api.tea.proto.TeaTypeSearchRequest.Conditions:type_name -> gopa.api.tea.proto.TeaTypeSearchConditions
	0,  // 3: gopa.api.tea.proto.TeaTypeResponse.TeaType:type_name -> gopa.api.tea.proto.TeaType
	0,  // 4: gopa.api.tea.proto.TeaTypeSearchResponse.List:type_name -> gopa.api.tea.proto.TeaType
	1,  // 5: gopa.api.tea.proto.TeaTypeRPC.Create:input_type -> gopa.api.tea.proto.TeaTypeCreateRequest
	2,  // 6: gopa.api.tea.proto.TeaTypeRPC.Delete:input_type -> gopa.api.tea.proto.TeaTypeDeleteRequest
	3,  // 7: gopa.api.tea.proto.TeaTypeRPC.Update:input_type -> gopa.api.tea.proto.TeaTypeUpdateRequest
	5,  // 8: gopa.api.tea.proto.TeaTypeRPC.Get:input_type -> gopa.api.tea.proto.TeaTypeGetRequest
	9,  // 9: gopa.api.tea.proto.TeaTypeRPC.Search:input_type -> gopa.api.tea.proto.TeaTypeSearchRequest
	10, // 10: gopa.api.tea.proto.TeaTypeRPC.Create:output_type -> gopa.api.tea.proto.TeaTypeResponse
	12, // 11: gopa.api.tea.proto.TeaTypeRPC.Delete:output_type -> gopa.api.ptypes.Int64
	13, // 12: gopa.api.tea.proto.TeaTypeRPC.Update:output_type -> gopa.api.ptypes.Empty
	10, // 13: gopa.api.tea.proto.TeaTypeRPC.Get:output_type -> gopa.api.tea.proto.TeaTypeResponse
	11, // 14: gopa.api.tea.proto.TeaTypeRPC.Search:output_type -> gopa.api.tea.proto.TeaTypeSearchResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_products_src_tea_type_proto_init() }
func file_api_products_src_tea_type_proto_init() {
	if File_api_products_src_tea_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_products_src_tea_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeGetConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeFindConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeSearchConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_products_src_tea_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaTypeSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_products_src_tea_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_products_src_tea_type_proto_goTypes,
		DependencyIndexes: file_api_products_src_tea_type_proto_depIdxs,
		MessageInfos:      file_api_products_src_tea_type_proto_msgTypes,
	}.Build()
	File_api_products_src_tea_type_proto = out.File
	file_api_products_src_tea_type_proto_rawDesc = nil
	file_api_products_src_tea_type_proto_goTypes = nil
	file_api_products_src_tea_type_proto_depIdxs = nil
}
